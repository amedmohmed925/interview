[
  {
    "id": 1,
    "question_en": "Write a function to reverse a string in JavaScript.",
    "question_ar": "اكتب دالة لعكس سلسلة نصية في JavaScript.",
    "solution": "function reverseString(str) {\n  return str.split('').reverse().join('');\n}\n// Example:\nconsole.log(reverseString('hello')); // Expected output: olleh",
    "examples": [
      { "input": "'hello'", "expected_output": "olleh" }
    ]
  },
  {
    "id": 2,
    "question_en": "Find the maximum number in an array.",
    "question_ar": "جد أكبر رقم في مصفوفة.",
    "solution": "function findMax(arr) {\n  return Math.max(...arr);\n}\n// Example:\nconsole.log(findMax([1, 5, 2, 9, 3])); // Expected output: 9",
    "examples": [
      { "input": "[1, 5, 2, 9, 3]", "expected_output": "9" }
    ]
  },
  {
    "id": 3,
    "question_en": "Check if a string is a palindrome.",
    "question_ar": "تحقق مما إذا كانت السلسلة النصية Palindrome.",
    "solution": "function isPalindrome(str) {\n  const reversed = str.split('').reverse().join('');\n  return str === reversed;\n}\n// Example:\nconsole.log(isPalindrome('madam')); // Expected output: true",
    "examples": [
      { "input": "'madam'", "expected_output": "true" },
      { "input": "'hello'", "expected_output": "false" }
    ]
  },
  {
    "id": 4,
    "question_en": "Find the factorial of a number.",
    "question_ar": "احسب مضروب رقم معين.",
    "solution": "function factorial(n) {\n  if (n === 0) return 1;\n  return n * factorial(n - 1);\n}\n// Example:\nconsole.log(factorial(5)); // Expected output: 120",
    "examples": [
      { "input": "5", "expected_output": "120" }
    ]
  },
  {
    "id": 5,
    "question_en": "Find the nth Fibonacci number.",
    "question_ar": "احسب العدد الـ n في متتالية فيبوناتشي.",
    "solution": "function fibonacci(n) {\n  if (n <= 1) return n;\n  return fibonacci(n - 1) + fibonacci(n - 2);\n}\n// Example:\nconsole.log(fibonacci(6)); // Expected output: 8",
    "examples": [
      { "input": "6", "expected_output": "8" }
    ]
  },
  {
    "id": 6,
    "question_en": "Remove duplicates from an array.",
    "question_ar": "احذف العناصر المكررة من مصفوفة.",
    "solution": "function removeDuplicates(arr) {\n  return [...new Set(arr)];\n}\n// Example:\nconsole.log(removeDuplicates([1, 2, 2, 3, 4, 4])); // Expected output: [1,2,3,4]",
    "examples": [
      { "input": "[1, 2, 2, 3, 4, 4]", "expected_output": "[1,2,3,4]" }
    ]
  },
  {
    "id": 7,
    "question_en": "Find the index of the first occurrence of a target in an array.",
    "question_ar": "جد موقع أول ظهور لعنصر داخل مصفوفة.",
    "solution": "function findIndex(arr, target) {\n  return arr.indexOf(target);\n}\n// Example:\nconsole.log(findIndex([10, 20, 30, 20], 20)); // Expected output: 1",
    "examples": [
      { "input": "[10,20,30,20], 20", "expected_output": "1" }
    ]
  },
  {
    "id": 8,
    "question_en": "Reverse an array without using reverse().",
    "question_ar": "اعكس مصفوفة بدون استخدام reverse().",
    "solution": "function reverseArray(arr) {\n  let res = [];\n  for (let i = arr.length - 1; i >= 0; i--) res.push(arr[i]);\n  return res;\n}\n// Example:\nconsole.log(reverseArray([1,2,3])); // Expected output: [3,2,1]",
    "examples": [
      { "input": "[1,2,3]", "expected_output": "[3,2,1]" }
    ]
  },
  {
    "id": 9,
    "question_en": "Check if two strings are anagrams.",
    "question_ar": "تحقق مما إذا كان النصان Anagrams.",
    "solution": "function isAnagram(s1, s2) {\n  return s1.split('').sort().join('') === s2.split('').sort().join('');\n}\n// Example:\nconsole.log(isAnagram('listen','silent')); // Expected output: true",
    "examples": [
      { "input": "'listen','silent'", "expected_output": "true" }
    ]
  },
  {
    "id": 10,
    "question_en": "Find the missing number in a sequence 1..n.",
    "question_ar": "جد الرقم المفقود في تسلسل من 1 إلى n.",
    "solution": "function findMissing(arr, n) {\n  const expectedSum = (n * (n + 1)) / 2;\n  const actualSum = arr.reduce((a, b) => a + b, 0);\n  return expectedSum - actualSum;\n}\n// Example:\nconsole.log(findMissing([1,2,4,5], 5)); // Expected output: 3",
    "examples": [
      { "input": "[1,2,4,5], 5", "expected_output": "3" }
    ]
  },
  {
    "id": 11,
    "question_en": "Find the longest word in a sentence.",
    "question_ar": "جد أطول كلمة في جملة.",
    "solution": "function longestWord(sentence) {\n  return sentence.split(' ').reduce((a, b) => a.length >= b.length ? a : b);\n}\n// Example:\nconsole.log(longestWord('I love programming challenges')); // Expected output: programming",
    "examples": [
      { "input": "'I love programming challenges'", "expected_output": "programming" }
    ]
  },
  {
    "id": 12,
    "question_en": "Count the number of vowels in a string.",
    "question_ar": "احسب عدد الحروف المتحركة في سلسلة نصية.",
    "solution": "function countVowels(str) {\n  return (str.match(/[aeiou]/gi) || []).length;\n}\n// Example:\nconsole.log(countVowels('hello world')); // Expected output: 3",
    "examples": [
      { "input": "'hello world'", "expected_output": "3" }
    ]
  },
  {
    "id": 13,
    "question_en": "Implement binary search.",
    "question_ar": "قم بتنفيذ خوارزمية البحث الثنائي.",
    "solution": "function binarySearch(arr, target) {\n  let l=0, r=arr.length-1;\n  while(l<=r){\n    const mid = Math.floor((l+r)/2);\n    if(arr[mid]===target) return mid;\n    if(arr[mid]<target) l=mid+1; else r=mid-1;\n  }\n  return -1;\n}\n// Example:\nconsole.log(binarySearch([1,2,3,4,5,6], 4)); // Expected output: 3",
    "examples": [
      { "input": "[1,2,3,4,5,6], 4", "expected_output": "3" }
    ]
  },
  {
    "id": 14,
    "question_en": "Sort an array using bubble sort.",
    "question_ar": "رتب مصفوفة باستخدام Bubble Sort.",
    "solution": "function bubbleSort(arr) {\n  for(let i=0;i<arr.length;i++){\n    for(let j=0;j<arr.length-i-1;j++){\n      if(arr[j]>arr[j+1]) [arr[j],arr[j+1]]=[arr[j+1],arr[j]];\n    }\n  }\n  return arr;\n}\n// Example:\nconsole.log(bubbleSort([5,3,8,1])); // Expected output: [1,3,5,8]",
    "examples": [
      { "input": "[5,3,8,1]", "expected_output": "[1,3,5,8]" }
    ]
  },
  {
    "id": 15,
    "question_en": "Implement a stack using arrays.",
    "question_ar": "قم بتنفيذ مكدس (Stack) باستخدام المصفوفات.",
    "solution": "class Stack {\n  constructor(){this.items=[];}\n  push(x){this.items.push(x);}\n  pop(){return this.items.pop();}\n  peek(){return this.items[this.items.length-1];}\n}\n// Example:\nconst s = new Stack();\ns.push(1); s.push(2);\nconsole.log(s.pop()); // Expected output: 2",
    "examples": [
      { "input": "push 1, push 2, pop()", "expected_output": "2" }
    ]
  },
  {
    "id": 16,
    "question_en": "Implement a queue using arrays.",
    "question_ar": "قم بتنفيذ قائمة انتظار (Queue) باستخدام المصفوفات.",
    "solution": "class Queue {\n  constructor(){this.items=[];}\n  enqueue(x){this.items.push(x);}\n  dequeue(){return this.items.shift();}\n}\n// Example:\nconst q = new Queue();\nq.enqueue(1); q.enqueue(2);\nconsole.log(q.dequeue()); // Expected output: 1",
    "examples": [
      { "input": "enqueue 1, enqueue 2, dequeue()", "expected_output": "1" }
    ]
  },
  {
    "id": 17,
    "question_en": "Find the second largest number in an array.",
    "question_ar": "جد ثاني أكبر رقم في مصفوفة.",
    "solution": "function secondLargest(arr) {\n  let uniq=[...new Set(arr)];\n  uniq.sort((a,b)=>b-a);\n  return uniq[1];\n}\n// Example:\nconsole.log(secondLargest([10,20,4,45,99])); // Expected output: 45",
    "examples": [
      { "input": "[10,20,4,45,99]", "expected_output": "45" }
    ]
  },
  {
    "id": 18,
    "question_en": "Find the first non-repeating character in a string.",
    "question_ar": "جد أول حرف غير مكرر في سلسلة نصية.",
    "solution": "function firstUniqueChar(str){\n  for(let c of str){\n    if(str.indexOf(c)===str.lastIndexOf(c)) return c;\n  }\n  return null;\n}\n// Example:\nconsole.log(firstUniqueChar('swiss')); // Expected output: w",
    "examples": [
      { "input": "'swiss'", "expected_output": "w" }
    ]
  },
  {
    "id": 19,
    "question_en": "Rotate an array by k steps.",
    "question_ar": "قم بتدوير مصفوفة بعدد k من الخطوات.",
    "solution": "function rotateArray(arr, k){\n  k = k % arr.length;\n  return arr.slice(-k).concat(arr.slice(0, -k));\n}\n// Example:\nconsole.log(rotateArray([1,2,3,4,5], 2)); // Expected output: [4,5,1,2,3]",
    "examples": [
      { "input": "[1,2,3,4,5], 2", "expected_output": "[4,5,1,2,3]" }
    ]
  },
  {
    "id": 20,
    "question_en": "Implement merge sort.",
    "question_ar": "قم بتنفيذ Merge Sort.",
    "solution": "function mergeSort(arr){\n  if(arr.length<=1) return arr;\n  const mid=Math.floor(arr.length/2);\n  const left=mergeSort(arr.slice(0,mid));\n  const right=mergeSort(arr.slice(mid));\n  return merge(left,right);\n}\nfunction merge(l,r){\n  let res=[];\n  while(l.length&&r.length){\n    if(l[0]<r[0]) res.push(l.shift()); else res.push(r.shift());\n  }\n  return res.concat(l,r);\n}\n// Example:\nconsole.log(mergeSort([3,1,4,1,5])); // Expected output: [1,1,3,4,5]",
    "examples": [
      { "input": "[3,1,4,1,5]", "expected_output": "[1,1,3,4,5]" }
    ]
  },
  {
    "id": 21,
    "question_en": "Check if a number is prime.",
    "question_ar": "تحقق مما إذا كان الرقم أوليًا.",
    "solution": "function isPrime(n){\n  if(n<2) return false;\n  for(let i=2;i<=Math.sqrt(n);i++) if(n%i===0) return false;\n  return true;\n}\n// Example:\nconsole.log(isPrime(7)); // Expected output: true",
    "examples": [
      { "input": "7", "expected_output": "true" }
    ]
  },
  {
    "id": 22,
    "question_en": "Find the greatest common divisor (GCD) of two numbers.",
    "question_ar": "جد القاسم المشترك الأكبر (GCD) لرقمين.",
    "solution": "function gcd(a,b){\n  if(b===0) return a;\n  return gcd(b,a%b);\n}\n// Example:\nconsole.log(gcd(48,18)); // Expected output: 6",
    "examples": [
      { "input": "48,18", "expected_output": "6" }
    ]
  }
]
